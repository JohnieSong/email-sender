name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

# 更新权限配置
permissions:
  contents: write
  packages: write
  actions: write
  security-events: write
  deployments: write
  issues: write
  pages: write
  pull-requests: write
  repository-projects: write

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        pip list  # 显示所有已安装的包
        
    - name: Verify Required Files
      run: |
        Write-Host "Checking required files..."
        Get-ChildItem -Recurse | Select-Object FullName
        if (-not (Test-Path "version_info.txt")) {
          Write-Error "Error: version_info.txt not found"
          exit 1
        }
        if (-not (Test-Path "app_version.txt")) {
          Write-Error "Error: app_version.txt not found"
          exit 1
        }
        if (-not (Test-Path "mail_sender.py")) {
          Write-Error "Error: mail_sender.py not found"
          exit 1
        }
        if (-not (Test-Path "imgs\logo.ico")) {
          Write-Error "Error: imgs/logo.ico not found"
          exit 1
        }
        if (-not (Test-Path "styles.py")) {
          Write-Error "Error: styles.py not found"
          exit 1
        }
        if (-not (Test-Path "requirements.txt")) {
          Write-Error "Error: requirements.txt not found"
          exit 1
        }

    - name: Build with PyInstaller
      run: |
        pyinstaller --noconfirm --onefile --windowed `
          --add-data "imgs;imgs" `
          --add-data "styles.py;." `
          --add-data "database.py;." `
          --add-data "email_utils.py;." `
          --add-data "app_version.txt;." `
          --version-file version_info.txt `
          --icon=imgs/logo.ico `
          --name email-sender `
          --clean `
          mail_sender.py
        
    - name: Verify Build
      run: |
        Write-Host "Checking build output..."
        Get-ChildItem dist
        $exePath = "dist\email-sender.exe"
        if (-not (Test-Path $exePath)) {
          Write-Error "Build failed - executable not found"
          exit 1
        }
        $fileInfo = Get-Item $exePath
        Write-Host "Executable size: $($fileInfo.Length) bytes"
        if ($fileInfo.Length -lt 1MB) {
          Write-Error "Suspicious file size - build might be incomplete"
          exit 1
        }
        
    - name: Create Release ZIP
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        Set-Location dist
        Get-ChildItem
        7z a -tzip "../email-sender-${{ github.ref_name }}.zip" *
        Set-Location ..
        Get-ChildItem
        
    - name: Verify Release Files
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        Write-Host "Verifying release files..."
        Get-ChildItem "email-sender-${{ github.ref_name }}.zip"
        Get-ChildItem "dist\email-sender.exe"
        if (-not (Test-Path "CHANGELOG.md")) {
          Write-Error "CHANGELOG.md not found"
          exit 1
        }

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        name: 邮件批量发送工具 ${{ github.ref_name }}
        files: |
          email-sender-${{ github.ref_name }}.zip
          dist/email-sender.exe
          README.md
          CHANGELOG.md
          version_info.txt
          app_version.txt
        body_path: CHANGELOG.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifact
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: email-sender
        path: |
          dist/email-sender.exe
          README.md
          requirements.txt
        retention-days: 90

    - name: Collect Environment Info
      run: |
        Write-Host "Python Version:"
        python --version
        Write-Host "Pip Version:"
        pip --version
        Write-Host "System Info:"
        systeminfo | Select-String "OS"
        Write-Host "Working Directory:"
        Get-Location 